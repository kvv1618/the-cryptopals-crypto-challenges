import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
def pkcs7_unpad_bytes(input_bytes): 
    padding = input_bytes[-input_bytes[-1]:]
    if not all(padding[byte] == len(padding) for byte in range(0, len(padding))):
        return input_bytes
    return input_bytes[:-input_bytes[-1]]
with open('10.txt') as inputf:
    cypertext=base64.b64decode(inputf.read())
iv=b"\x00"*AES.block_size
key=b"YELLOW SUBMARINE"
pvb=iv
ptxt=b""
for i in range(0,len(cypertext),AES.block_size):
    chunk=cypertext[i:i+AES.block_size]
    c=AES.new(key,AES.MODE_ECB)
    text=c.decrypt(chunk)
    temp=pkcs7_unpad_bytes(text)
    ans=b""
    for j,k in zip(temp,pvb):
        ans+=bytes([k^j])
    ptxt+=ans
    pvb=chunk
ptext=pkcs7_unpad_bytes(ptxt)
print(ptext)
