#include <bits/stdc++.h> 
using namespace std;
typedef unsigned long long int ll;
void HexToBin(string hexdec,vector<int>&v) 
{ 
    ll i = 0;
    while (hexdec[i]) {
        switch (hexdec[i]) { 
        case '0':
        {
            v.push_back(0);
            v.push_back(0);
            v.push_back(0);
            v.push_back(0);
               break;
        } 
          
        case '1': 
           {
            v.push_back(0);
            v.push_back(0);
            v.push_back(0);
            v.push_back(1);
             break;
        }  
        case '2': 
          {
            v.push_back(0);
            v.push_back(0);
            v.push_back(1);
            v.push_back(0);
             break;
        } 
        case '3': 
            {
            v.push_back(0);
            v.push_back(0);
            v.push_back(1);
            v.push_back(1);
             break;
        }  
        case '4': 
          {
            v.push_back(0);
            v.push_back(1);
            v.push_back(0);
            v.push_back(0);
             break;
        } 
        case '5': 
          {
            v.push_back(0);
            v.push_back(1);
            v.push_back(0);
            v.push_back(1);
             break;
        }  
        case '6': 
          {
            v.push_back(0);
            v.push_back(1);
            v.push_back(1);
            v.push_back(0);
             break;
        }  
        case '7': 
          {
            v.push_back(0);
            v.push_back(1);
            v.push_back(1);
            v.push_back(1);
             break;
        }  
        case '8': 
          {
            v.push_back(1);
            v.push_back(0);
            v.push_back(0);
            v.push_back(0);
             break;
        }  
        case '9': 
          {
            v.push_back(1);
            v.push_back(0);
            v.push_back(0);
            v.push_back(1);
             break;
        }  
        case 'A': 
        case 'a': 
          {
            v.push_back(1);
            v.push_back(0);
            v.push_back(1);
            v.push_back(0);
             break;
        }  
        case 'B': 
        case 'b': 
          {
            v.push_back(1);
            v.push_back(0);
            v.push_back(1);
            v.push_back(1);
             break;
        }  
        case 'C': 
        case 'c': 
          {
            v.push_back(1);
            v.push_back(1);
            v.push_back(0);
            v.push_back(0);
             break;
        }  
        case 'D': 
        case 'd': 
          {
            v.push_back(1);
            v.push_back(1);
            v.push_back(0);
            v.push_back(1);
             break;
        }  
        case 'E': 
        case 'e': 
          {
            v.push_back(1);
            v.push_back(1);
            v.push_back(1);
            v.push_back(0);
        }  
            break; 
        case 'F': 
        case 'f': 
          {
            v.push_back(1);
            v.push_back(1);
            v.push_back(1);
            v.push_back(1);
             break;
        } 
        } 
        i++; 
    } 
}
void createMap(unordered_map<string, char> *um) 
{ 
    (*um)["0000"] = '0'; 
    (*um)["0001"] = '1'; 
    (*um)["0010"] = '2'; 
    (*um)["0011"] = '3'; 
    (*um)["0100"] = '4'; 
    (*um)["0101"] = '5'; 
    (*um)["0110"] = '6'; 
    (*um)["0111"] = '7'; 
    (*um)["1000"] = '8'; 
    (*um)["1001"] = '9'; 
    (*um)["1010"] = 'a'; 
    (*um)["1011"] = 'b'; 
    (*um)["1100"] = 'c'; 
    (*um)["1101"] = 'd'; 
    (*um)["1110"] = 'e'; 
    (*um)["1111"] = 'f'; 
} 
void bth(string bin,ll x)
{
    unordered_map<string, char> bin_hex_map; 
    createMap(&bin_hex_map); 
    string hex="";
    ll i=0;
     while (1) 
    {
        hex += bin_hex_map[bin.substr(i, 4)]; 
        i += 4; 
        if (i == x) 
            break;
    }
    cout<<hex;
}
int main(void) {
	string s1,s2;
	cin>>s1;
	cin>>s2;
	/*vector<int>v1,v2,ans;
	HexToBin(s1,v1);
	HexToBin(s2,v2);
	ll x=v1.size();
	char s[x],d;
	for(ll i=0;i<x;i++)
	{
	    int k=v1[i]^v2[i];
	    if(k==1)
	    strcat(s,"1");
	    if(k==0)
	    strcat(s,"0");
	}
	cout<<s;
	bth(s,x);*/
	return 0;
}
